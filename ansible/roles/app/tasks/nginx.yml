---
# roles/app/tasks/nginx.yml

- name: Create static site directory
  ansible.builtin.file:
    path: "/opt/app/static_site"
    state: directory
    mode: '0755'

- name: Copy index.html
  ansible.builtin.copy:
    src: files/index.html
    dest: "/opt/app/static_site/index.html"
    mode: '0644'

- name: Create nginx config directory
  ansible.builtin.file:
    path: "/opt/app/nginx"
    state: directory
    mode: '0755'

- name: Deploy nginx.conf from template
  ansible.builtin.template:
    src: templates/nginx.conf.j2
    dest: /opt/app/nginx/default.conf
    mode: '0644'

- name: Run OAuth2 Proxy container
  community.docker.docker_container:
    name: "{{ oauth2_proxy.container_name }}"
    image: "{{ oauth2_proxy.image }}"
    state: started
    restart_policy: unless-stopped
    ports:
      - "{{ oauth2_proxy.port }}:4180"
    networks:
      - name: "{{ docker_network }}"
    env:
      OAUTH2_PROXY_PROVIDER: keycloak
      OAUTH2_PROXY_CLIENT_ID: "{{ oauth2_proxy.client_id }}"
      OAUTH2_PROXY_CLIENT_SECRET: "{{ oauth2_proxy.client_secret }}"
      OAUTH2_PROXY_COOKIE_SECRET: "{{ oauth2_proxy.cookie_secret }}"
      OAUTH2_PROXY_UPSTREAMS: "http://{{ nginx.container_name }}:80"
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:8080/oauth2/callback"
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_LOG_LEVEL: "debug"
      OAUTH2_PROXY_PROVIDER_URL: "http://keycloak:8080"
      OAUTH2_PROXY_ISSUER_URL: "http://keycloak:8080"

- name: Wait for OAuth2 Proxy to be available
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: "{{ oauth2_proxy.port }}"
    delay: 5
    timeout: 30

- name: Run Nginx container
  community.docker.docker_container:
    name: "{{ nginx.container_name }}"
    image: "{{ nginx.image }}"
    state: started
    restart_policy: unless-stopped
    volumes:
      - "/opt/app/static_site:/usr/share/nginx/html:ro"
      - "/opt/app/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    ports:
      - "{{ nginx.port }}:80"
    networks:
      - name: "{{ docker_network }}"

